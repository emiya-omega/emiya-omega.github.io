[{"content":"面向对象语言特点 # 抽象 类 -\u0026gt; 抽象 对象 -\u0026gt; 具体 封装 成员变量(私) 成员函数(公) 继承 多态 cpp向下兼容c语言 #cpp中不允许/**/嵌套使用 #cout\u0026lt;\u0026lt;_LINE_\u0026lt;\u0026lt;~~; # 显示该语句位于源程序第几行 通常只有规模很小(一般为1~5条语句)而频繁使用函数才定义为内联函数 #输出长度与精度控制 ##include \u0026lt;iomainip\u0026gt; //std::setw cout\u0026lt;\u0026lt;setw(10);限制输出长度为10 cout\u0026lt;\u0026lt;setprecision(5)\u0026lt;\u0026lt;~;//限制输出精度 cout\u0026lt;\u0026lt;fixed;//用定点数表示法表示浮点数 cpp中函数可以重载.只要函数参数的类型不同,or参数的个数不同,或者二者兼而有之,两个or两个以上的函数可以使用相同的函数名 #指向常量的指针 #const char *name =\u0026quot;chen\u0026quot;;\n*name 是常量(name不允许改变) name[3]='a' ; is ERROR name是指向常量的指针变量(指针name本身可以改变) name =\u0026quot;zhang\u0026quot;; is RIGHT 指向字符串的常指针 #char* const name =\u0026quot;chen\u0026quot;;\nname是常量(name不允许改变) 指针的地址不允许改变 name = \u0026quot;zhang\u0026quot; is ERROR 指向常量的常指针 #const char* const name =\u0026quot;chen\u0026quot;;\n","date":"1 January 0001","permalink":"/cpp_learn/","section":"House of Eternity","summary":"面向对象语言特点 # 抽象 类 -\u0026gt; 抽象 对象 -\u0026gt; 具体 封装 成员变量(私) 成员函数(公) 继承 多态 cpp向下兼容c语言 #cpp中不允许/**/嵌套使用 #cout\u0026lt;\u0026lt;_LINE_\u0026lt;\u0026lt;~~; # 显示该语句位于源程序第几行 通常只有规模很小(一般为1~5条语句)而频繁使用函数才定义为内联函数 #输出长度与精度控制 ##include \u0026lt;iomainip\u0026gt; //std::setw cout\u0026lt;\u0026lt;setw(10);限制输出长度为10 cout\u0026lt;\u0026lt;setprecision(5)\u0026lt;\u0026lt;~;//限制输出精度 cout\u0026lt;\u0026lt;fixed;//用定点数表示法表示浮点数 cpp中函数可以重载.","title":"CppLearn"},{"content":"","date":null,"permalink":"/","section":"House of Eternity","summary":"","title":"House of Eternity"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]